<h2>Javascript</h2>
<div class="row">
	
	<div class="col s12 m12">
		<div class="card-content black-text">
			<p>JavaScript Es un lenguaje de programación que te permite crear contenido nuevo y dinámico, controlar archivos de multimedia, crear imágenes animadas y muchas otras cosas más. (Aunque, no todo, pero es increíble lo que puedes llegar a hacer con tan sólo unas pocas líneas de código de JavaScript). 
			</p>
		</div>
	</div>


	<div class="col s12 m12">
		<h4>Scope</h4>
		<div class="col s12 m12">
			<div class="card-content black-text  hoverable">
				<p>El scope es el alcance de una variable, puede ser de dos tipos, global y local. Una variable cuyo scope es global se puede acceder desde cualquier parte del código, una local solo desde la función que la contiene</p>
			</div>

			
		</div>

		<pre>
			<code id="scope" data-script='mycard.js' class="language-javascript"></code>
		</pre>
	</div>	

	<div class="col s12 m12">
		<div class="card-content black-text">
			<blockquote>Revisemos como se comportan las variables, revisen su consola del navegador , las siguientes funciones ya fueron cargadas, y son reales </blockquote>
		</div>

		<pre>
			<code id="scope" data-script='functions.js' class="language-javascript"></code>
		</pre>
		<h4>Tipos de variables</h4>
		<div class="card-panel hoverable">
			<blockquote>
				<code   class="language-javascript">var</code>
				Declara una variable de scope global o local para la función sin importar el ámbito de bloque. Permite hoisting.

			</blockquote>
		</div>


		<div class="card-panel hoverable">
			<blockquote>
				<code   class="language-javascript">let	</code>
				Declara una variable de scope global, local para la función o de bloque. Es reasignable y no permite hoisting.

			</blockquote>
		</div>


		<div class="card-panel hoverable">
			<blockquote>
				<code   class="language-javascript">const</code>
				declara una variable de scope global, local para la función o de bloque. No es reasignable, pero es mutable. No permite hoisting.
			</blockquote>
		</div>
		<h4>Hoisting</h4>
		<div class="card-content black-text">
			<blockquote>
				El concepto de Hoisting fue pensado como una manera general de referirse a cómo funcionan los contextos de ejecución en JavaScript (específicamente las fases de creación y ejecución).
			</blockquote>
		</div>

		<pre>
			<code id="hoisting" data-script='hoisting.js' class="language-javascript"></code>
		</pre>
	</div>
</div>
