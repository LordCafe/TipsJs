<h3>The functions</h3>

<div>
	<div>Una declaracion de funcion , define un nombre de función.</div>
	<p>
		Para crear una declaracion de función , se tiene que usar la palabra clave, <span class="red-text">function</span>, seguido por el nombre la funcion.
	</p>
	<p>
		Cuando se la declaracion de funcion, la funcion es <span class="red-text">hoisted</span>,permitiendo que esta funcion este disponible antes de que se declare.
	</p>

	<pre>
		<code class="language-javascript">
			function MyAmazingFunction(){
				console.log( 'this es window :' this === window);

			}
	</code>
</pre>
</div>


<h3>Expresiones de funciones</h3>

<div>

	<p>
		Expresiones de función define una función nombrada o anónima. 
	</p>
	<p>
		Una función anónima es una función que no tiene nombre. Las expresiones de funciones no se  <span class="red-text">hoisted</span> y, por lo tanto, no se pueden usar antes de que se definan. En el siguiente ejemplo, estamos configurando el objeto de función anónimo igual a una variable.
	</p>
	
	<pre>
		<code class="language-javascript">
			let MoreAmazingFunction = function(parameters){
			 console.log( 'this es window :' this === window);

		}
	</code>
</pre>
</div>


<h3> Arrow Function Expression</h3>

<div>


	<p>
		
		Una expresión de función de flecha es una sintaxis más corta para escribir expresiones de función. Las funciones de flecha no crean su propio valor.<span class="red-text">this</span>
	</p>
	
	<pre>
		<code class="language-javascript">
		let name = (parameters) => {
			console.log( 'this es window :' this === window);
		}
	</code>
</pre>
</div>





