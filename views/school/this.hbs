<h3> El concepto de this</h3>

<div>

	<pre>
		<code data-script='functions.js' class="language-javascript"></code>
	</pre>
	<p>	
		En la mayoría de los casos, el valor de esto está determinado por cómo se llama una función. 
	</p>
	<blockquote>
		No se puede establecer por asignación durante la ejecución, y puede ser diferente cada vez que se llama a la función.
	</blockquote>

	<pre>
		<code data-script='usecar.js'  class="language-javascript">
			
		</code>
	</pre>
	

	<blockquote>
		ES5 introdujo el método bind () para establecer el valor de esto de una función independientemente de cómo se llame

		<pre>
			<code class="language-javascript">
				let MiguelCar =  Mycar.bind({ type: 'no sirve' , model : 'volvo'});
				MiguelCar();	

			</code>
		</pre>
	</blockquote>
	




	<blockquote>
		ES2015 introdujo funciones de flecha que no proporcionan su propia vinculación (conserva este valor del contexto léxico adjunto).

	</blockquote>
	


</div>


<script type="text/javascript">

	document.addEventListener('readystatechange', event => {

		if (event.target.readyState === "complete") {
			let ClassScripts = document.querySelectorAll('code');
			let SetFolder = '/js/this/';
			Array.from(ClassScripts).map(( data )=>{
				if(data.dataset.script){
					let myfile = SetFolder + data.dataset.script;
					GetFile(myfile,function( script ){		
						data.innerHTML = script;
						Prism.highlightElement( data );
					});		
				}
			});
		}

	});


</script>